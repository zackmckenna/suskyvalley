{"version":3,"sources":["assets/stardewbackground.png","logo.svg","components/Parallax.js","App.js","serviceWorker.js","index.js","assets/sdv_divider.png","fonts/StardewValley.ttf"],"names":["module","exports","MyComponent","useState","name","setName","playerName","setPlayerName","hasName","setHasName","part","setPart","colaCode","setColaCode","wrongColaCode","setWrongColaCode","magnetCode","setMagnetCode","keyCodeOne","setKeyCodeOne","keyCodeTwo","setKeyCodeTwo","handlePartClick","event","preventDefault","Error","PartOne","style","fontFamily","color","Button","onClick","PartTwo","PartFour","PartFive","PartSix","PartSeven","blur","bgImage","require","bgImageAlt","strength","Container","Row","Col","className","WebkitTextFillColor","fontColor","fontSize","marginBottom","margin","sm","InputGroup","FormControl","onChange","target","value","handleNameChange","placeholder","aria-label","aria-describedby","Append","handleNameSubmit","variant","handleColaCodeChange","setTimeout","handleMagnetCodeChange","handleKeyCodeOneChange","handleKeyCodeTwoChange","renderPart","src","divider","App","Parallax","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.06882d6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stardewbackground.317d7843.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect } from 'react';\nimport { Parallax, Background } from 'react-parallax';\nimport { Row, Col, InputGroup, Button, Container, FormControl } from 'react-bootstrap'\nimport divider from '../assets/sdv_divider.png'\n\nconst MyComponent = () => {\n  const [name, setName] = useState('')\n  const [playerName, setPlayerName] = useState('')\n  const [hasName, setHasName] = useState(false)\n  const [part, setPart] = useState(0)\n  const [colaCode, setColaCode] = useState('')\n  const [counter, setCounter] = useState(0)\n  const [wrongColaCode, setWrongColaCode] = useState('')\n  const [magnetCode, setMagnetCode] = useState('')\n  const [keyCodeOne, setKeyCodeOne] = useState('')\n  const [keyCodeTwo, setKeyCodeTwo] = useState('')\n\n  const handleNameChange = (event) => {\n    event.preventDefault()\n    setName(event.target.value)\n  }\n\n  const handleSubmitColaCode = () => {\n    if (colaCode == '4072'){\n      setPart(part + 1)\n    } else {\n      setColaCode('')\n      setWrongColaCode('That is not the code!')\n      setTimeout(() => {\n        setWrongColaCode('')\n      }, 3000)\n    }\n  }\n\n  const handleSubmitKeyCodeOne = () => {\n    if (keyCodeOne == '4352'){\n      setPart(part + 1)\n    } else {\n      setKeyCodeOne('')\n      setWrongColaCode('That is not the code!')\n      setTimeout(() => {\n        setWrongColaCode('')\n      }, 3000)\n    }\n  }\n\n  const handleKeyCodeOneChange = (event) => {\n    event.preventDefault()\n    setKeyCodeOne(event.target.value)\n  }\n\n  const handleSubmitKeyCodeTwo = () => {\n    if (keyCodeTwo == '2249'){\n      setPart(part + 1)\n    } else {\n      setKeyCodeTwo('')\n      setWrongColaCode('That is not the code!')\n      setTimeout(() => {\n        setWrongColaCode('')\n      }, 3000)\n    }\n  }\n\n  const handleKeyCodeTwoChange = (event) => {\n    event.preventDefault()\n    setKeyCodeTwo(event.target.value)\n  }\n\n  const handleSubmitMagnetCode = () => {\n    if (magnetCode == '5432861'){\n      setPart(part + 1)\n    } else {\n      setMagnetCode('')\n      setWrongColaCode('That is not the code!')\n      setTimeout(() => {\n        setWrongColaCode('')\n      }, 3000)\n    }\n  }\n\n  const handleColaCodeChange = (event) => {\n    event.preventDefault()\n    setColaCode(event.target.value)\n  }\n\n  const handleMagnetCodeChange = (event) => {\n    event.preventDefault()\n    setMagnetCode(event.target.value)\n  }\n\n\n  const handleNameSubmit = (event) => {\n    event.preventDefault()\n    setPlayerName(name)\n    setHasName(true)\n    setPart(1)\n  }\n\n  const handlePartClick = (event) => {\n    event.preventDefault()\n    setPart(part + 1)\n  }\n\n  const renderPart = () => {\n    switch (part) {\n      case 0:\n        return null\n      case 1:\n        return <PartOne/>\n      case 2:\n        return <PartTwo/>\n      case 3:\n        return <>\n          <h3 style={{ fontFamily: 'StardewValleyText'}}>Before you go looking for it, you might want to gather some items. And before you gather items, you might want to head to your fridge and grab some Joja cola for an energy boost! Type in the code on the can in order to continue.</h3>\n          <InputGroup className=\"mb-3\">\n            <FormControl\n              style={{ fontFamily: 'StardewValleyText'}}\n              onChange={(event) => handleColaCodeChange(event)}\n              value={colaCode}\n              placeholder=\"cola code\"\n              aria-label=\"cola code\"\n              aria-describedby=\"basic-addon2\"\n            />\n            <InputGroup.Append>\n              <Button style= {{ fontFamily: 'StardewValleyText' }} onClick={(event) => handleSubmitColaCode(event)} variant=\"primary\">I got the Cola!</Button>\n            </InputGroup.Append>\n          </InputGroup>\n          {wrongColaCode ? wrongColaCode : null}\n      </>\n      case 4:\n        return <>\n          <PartFour />\n          <InputGroup className=\"mb-3\">\n            <FormControl\n              style={{ fontFamily: 'StardewValleyText'}}\n              onChange={(event) => handleMagnetCodeChange(event)}\n              value={magnetCode}\n              placeholder=\"secret code\"\n              aria-label=\"cola code\"\n              aria-describedby=\"basic-addon2\"\n            />\n            <InputGroup.Append>\n              <Button style= {{ fontFamily: 'StardewValleyText' }} onClick={(event) => handleSubmitMagnetCode(event)} variant=\"primary\">Submit Code</Button>\n            </InputGroup.Append>\n          </InputGroup>\n          {wrongColaCode ? wrongColaCode : null}\n      </>\n      case 5:\n        return <>\n        <PartFive />\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            style={{ fontFamily: 'StardewValleyText'}}\n            onChange={(event) => handleKeyCodeOneChange(event)}\n            value={keyCodeOne}\n            placeholder=\"secret code\"\n            aria-label=\"cola code\"\n            aria-describedby=\"basic-addon2\"\n          />\n          <InputGroup.Append>\n            <Button style= {{ fontFamily: 'StardewValleyText' }} onClick={(event) => handleSubmitKeyCodeOne(event)} variant=\"primary\">Submit Key Code</Button>\n          </InputGroup.Append>\n        </InputGroup>\n        {wrongColaCode ? wrongColaCode : null}\n    </>\n    case 6:\n      return <>\n        <PartSix />\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            style={{ fontFamily: 'StardewValleyText'}}\n            onChange={(event) => handleKeyCodeTwoChange(event)}\n            value={keyCodeTwo}\n            placeholder=\"secret code 2\"\n            aria-label=\"cola code\"\n            aria-describedby=\"basic-addon2\"\n          />\n          <InputGroup.Append>\n            <Button style= {{ fontFamily: 'StardewValleyText' }} onClick={(event) => handleSubmitKeyCodeTwo(event)} variant=\"primary\">Submit Key Code</Button>\n          </InputGroup.Append>\n        </InputGroup>\n        {wrongColaCode ? wrongColaCode : null}\n    </>\n    case 7:\n      return <PartSeven />\n      default:\n        return <Error />\n    }\n  }\n\n  const Error = () => <h1>OH NO ERROR!</h1>\n\n  const PartOne = () => {\n    return (\n      <>\n        <h3 style={{ fontFamily: 'StardewValleyText'}}>What a great day in the Valley for such a special occasion! You've toiled long and hard this year to create an incredible farm. You've fought a countless number of horrific monsters, filled the hearts of everyone here with love, and have truly given this town 100%. So, for that, the citizens of Susky Valley thank you <span style={{ color: 'orange' }}>{playerName}</span>, and wish you a Happy Birthday!</h3>\n        <Button onClick={(event) => handlePartClick(event)} style= {{ fontFamily: 'StardewValleyText' }}>Yay! It's my birthday!</Button>\n      </>\n    )\n  }\n\n  const PartTwo = () => {\n    return (\n      <>\n        <h3 style={{ fontFamily: 'StardewValleyText'}}>To show our gratitude, we got you a special gift! To show our ineptitude, we somehow lost it this morning on our way to your house, and we need your help to find it again.</h3>\n        <Button onClick={(event) => handlePartClick(event)} style= {{ fontFamily: 'StardewValleyText' }}>Okie Bork</Button>\n      </>\n    )\n  }\n\n  const PartThree = () => {\n\n    const handleSubmitColaCode = () => {\n      if (colaCode == '4072'){\n        setPart(part + 1)\n      }\n    }\n\n    const handleColaCodeChange = (event) => {\n      event.preventDefault()\n      setColaCode(event.target.value)\n    }\n\n    return (\n      <>\n        <h3 style={{ fontFamily: 'StardewValleyText'}}>Before you go looking for it, you might want to gather some items. And before you gather items, you might want to head to your fridge and grab some Joja cola for an energy boost! Type in the code on the can in order to continue.</h3>\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            style={{ fontFamily: 'StardewValleyText'}}\n            onChange={(event) => handleColaCodeChange(event)}\n            value={colaCode}\n            placeholder=\"cola code\"\n            aria-label=\"cola code\"\n            aria-describedby=\"basic-addon2\"\n          />\n          <InputGroup.Append>\n            <Button style= {{ fontFamily: 'StardewValleyText' }} onClick={(event) => handleSubmitColaCode(event)} variant=\"primary\">Got the Cola!</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </>\n    )\n  }\n\n  const PartFour = () => {\n    return (\n    <>\n      <h3 style={{ fontFamily: 'StardewValleyText'}}>Great! I hope you're feeling more caffeinated now. So there are two items that you'll probably need to find your gift, so lets start with the first one. You'll need your compass to tell you where to go. Some spooky looking <span style={{ color: 'red'}}>M</span><span style={{ color: 'green'}}>A</span><span style={{ color: 'yellow'}}>G</span><span style={{ color: 'purple'}}>N</span><span style={{ color: '#B5E0F1'}}>E</span><span style={{ color: 'orange'}}>T</span><span style={{ color: 'blue'}}>S</span> might have hid it somewhere. Look behind them and you may find the clue!</h3>\n    </>\n    )\n  }\n\n  const PartFive = () => {\n    return (\n    <>\n      <h3 style={{ fontFamily: 'StardewValleyText'}}>GHOSTS: oooOOOOooo you got us. Fine, we'll tell you where the key is. Round and round the sound does go, how the compass needle spins, the tunes do flow. Go there and flip the lid to reveal the key and what we have hid.</h3>\n    </>\n    )\n  }\n\n  const PartSix = () => {\n    return (\n      <h3 style={{ fontFamily: 'StardewValleyText'}}>Ah! The compass! The first key item! You've found it! You're halfway there. Now for the next one. This item should be near where the plants hang out inside to stay warm during the winter.</h3>\n    )\n  }\n\n  const PartSeven = () => {\n    return (\n      <h3 style={{ fontFamily: 'StardewValleyText'}}>Oh! I almost forgot! Make sure to grab the map. I think one of Krobus' friends got to it, so it might be in poor shape. I think I last saw it around the black shipping crate in the kitchen. Grab the map, your compass, the shovel, and go find your Birthday Gift! Once again, happy birthday {name}, from everyone here in Susky Valley! I hope it's a fantastic day. </h3>\n    )\n  }\n\n  return (\n    <div>\n        {/* -----basic config-----*/}\n        <Parallax\n            blur={0}\n            bgImage={require('../assets/stardewbackground.png')}\n            bgImageAlt=\"the cat\"\n            strength={200}\n        >\n          <Container>\n\n            <Row>\n                <Col>\n                  <h1 className='mt-5' style={{ WebkitTextFillColor: 'rgba(217, 190, 37)', fontColor: 'black', fontSize: '10rem', marginBottom: '0', fontFamily: 'StardewValley'}}>\n                      <span style={{ fontFamily: 'StardewValleyCaps'}}>S</span>USK<span style={{ fontFamily: 'StardewValleyCaps'}}>Y</span>\n                  </h1>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <h1 style={{ WebkitTextFillColor: 'rgba(217, 190, 37)', margin: '0', fontSize: '10rem', fontFamily: 'StardewValley'}}>\n                    <span style={{ fontFamily: 'StardewValleyCaps'}}>V</span>ALLE<span style={{ fontFamily: 'StardewValleyCaps'}}>Y</span>\n                  </h1>\n                </Col>\n              </Row>\n              {!hasName ?\n              <>\n              <Row>\n                <Col>\n                  <h1 style={{ fontFamily: 'StardewValleyText'}}> Welcome to Susky Valley!</h1>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <h3 style={{ fontFamily: 'StardewValleyText'}}>Please enter your name:</h3>\n                </Col>\n              </Row>\n              <Row>\n                <Col style={{ margin: 'auto'}} sm={6}>\n                  <InputGroup className=\"mb-3\">\n                    <FormControl\n                      style={{ fontFamily: 'StardewValleyText'}}\n                      onChange={(event) => handleNameChange(event)}\n                      value={name}\n                      placeholder=\"name\"\n                      aria-label=\"Recipient's username\"\n                      aria-describedby=\"basic-addon2\"\n                    />\n                    <InputGroup.Append>\n                      <Button style= {{ fontFamily: 'StardewValleyText' }} onClick={(event) => handleNameSubmit(event)} variant=\"primary\">Submit Name</Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Col>\n              </Row>\n              </> : null }\n              {renderPart()}\n          </Container>\n            <img src={divider} />\n        </Parallax>\n    </div>\n  )\n}\n;\nexport default MyComponent;\n","import React, {useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Container, Row, Col, Button, Jumbotron } from 'react-bootstrap'\nimport StardewValley from './fonts/StardewValley.ttf'\nimport stardewbackground from './assets/stardewbackground.png'\nimport divider from './assets/sdv_divider.png'\n// import { Parallax, Background } from 'react-parallax'\nimport Parallax from './components/Parallax'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Parallax />\n      {/* <Row>\n        <Col>\n          <h1 className='mt-5' style={{ WebkitTextFillColor: 'rgba(217, 190, 37)', fontColor: 'black', fontSize: '10rem', marginBottom: '0', fontFamily: 'StardewValley'}}>\n              <span style={{ fontFamily: 'StardewValleyCaps'}}>S</span>USK<span style={{ fontFamily: 'StardewValleyCaps'}}>Y</span>\n          </h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h1 style={{ WebkitTextFillColor: 'rgba(217, 190, 37)', margin: '0', fontSize: '10rem', fontFamily: 'StardewValley'}}>\n            <span style={{ fontFamily: 'StardewValleyCaps'}}>V</span>ALLE<span style={{ fontFamily: 'StardewValleyCaps'}}>Y</span>\n          </h1>\n        </Col>\n      </Row>\n      <img src={divider}/>\n      <Row>\n        <Col style={{ fontFamily: 'StardewValleyText'}}>\n\n        </Col>\n      </Row>\n      <header className=\"App-header\">\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './fonts/StardewValley.ttf'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/sdv_divider.e4b9ac23.png\";","module.exports = __webpack_public_path__ + \"static/media/StardewValley.d52e9a73.ttf\";"],"sourceRoot":""}